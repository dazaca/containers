1- sudo docker run --rm -p 8787:8787 -e PASSWORD=nene 5e5d504d299b


/// check all volume sizes:
cd /var/lib/docker/btrfs/subvolumes
du -sh ./*


2- docker ps

3- docker run -d container_id  ////////  d -> detach (lanzarlo en segundo plano)

4- docker save rocker/verse > rstudio_container.tar

5- docker load -- input /home/dazaca/Containers/rstudio_container.tar

6- sudo docker run --rm -p 8787:8787 -e PASSWORD=nene 5e5d504d299b


/// -> to view all containers (running/stopped): --- > docker container ls -a
/// -> to close all running containers: ------------ > docker kill $(docker ps -q)
/// -> to remove all exited containers: ------------ > docker rm $(docker ps --filter status=exited -q)
					------------ > docker ps --filter status=exited -q | xargs docker rm



7- http://localhost:8787

8- sudo docker stop c1a1803a7aa22 -------->  docker rm c1a1803a7aa22 

9- sudo docker rmi ff47c56c9c0b

10- sudo docker login --username=dazaca ----------------> sudo docker logout

11- sudo docker commit -m "Initial unmodified RStudio Server image based on rocker/verse:latest-daily the 20220204." c1a1803a7aa2 dazaca/rstudio:1_initial

# NOTE: c1a1803a7aa2 is the ID of the container created from the "rocker/verse:latest-daily" image.

❯ sudo docker images
REPOSITORY           TAG            IMAGE ID       CREATED          SIZE
dazaca/rstudio       1_initial      9537c15e4354   55 minutes ago   4.08GB
rocker/verse         latest-daily   5e5d504d299b   5 days ago       4.08GB
rocker/shiny-verse   latest         c9925cd2058e   6 days ago       2.19GB


11.1- sudo docker commit -m "Initial unmodified RStudio Server image based on rocker/ml-verse:latest the 20220206." 
16f52cbe903b dazaca/rstudio:1_initial_ml

# NOT APPLIED -> 12- sudo docker tag 573d9433ed0a dazaca/rstudio:1_fresh_new

13- sudo docker push dazaca/rstudio:1_initial
13.1- sudo docker push dazaca/rstudio:1_initial_ml


The push refers to repository [docker.io/dazaca/rstudio]


///////////////////////////////////////////////////////////////////////
RStudio
///////////////////////////////////////////////////////////////////////
http://jsta.github.io/r-docker-tutorial/

1- Installing Dependencies external to the R system:

(https://developer.nvidia.com/cuda-10.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=deblocal)

https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64


Many R packages have dependencies external to R, for example GSL, GDAL, 
JAGS and so on. To install these on a running rocker container you need 
to go to the docker command line (in a new terminal window) and type the
following:

docker ps # find the ID of the running container you want to add a package to
docker exec -it 3c2a30b84869 bash # a docker command to start a bash shell in your container





////////////////////////
*** You need libassuan to build this program.
*** This library is for example available at
***   https://gnupg.org/ftp/gcrypt/libassuan/
*** (at least version 2.5.0 (API 2) is required).
***
configure:
***
*** You need libksba to build this program.
*** This library is for example available at
***   https://gnupg.org/ftp/gcrypt/libksba/
*** (at least version 1.3.5 using API 1 is required).
***
configure:
***
*** It is now required to build with support for the
*** New Portable Threads Library (nPth). Please install this
*** library first.  The library is for example available at
***   https://gnupg.org/ftp/gcrypt/npth/
*** (at least version 1.2 (API 1) is required).
***
configure: error: 
***
*** Required libraries not found. Please consult the above messages
*** and install them before running configure again.
***
root@3c2a30b84869:/gnupg-2.2.33# cd ..
root@3c2a30b84869:/# wget https://gnupg.org/ftp/gcrypt/libksba/
--2022-02-05 18:23:43--  https://gnupg.org/ftp/gcrypt/libksba/



///////////////////////



























wget https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64

sudo dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda-10-0


sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb`
`sudo apt-key add /var/cuda-repo-<version>/7fa2af80.pub`
`sudo apt-get update`
`sudo apt-get install cuda`














